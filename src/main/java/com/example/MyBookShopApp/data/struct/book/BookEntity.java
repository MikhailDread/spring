package com.example.MyBookShopApp.data.struct.book;

import com.example.MyBookShopApp.data.struct.author.AuthorEntity;
import com.example.MyBookShopApp.data.struct.book.file.BookFileEntity;
import com.example.MyBookShopApp.data.struct.book.review.BookReviewEntity;
import com.example.MyBookShopApp.data.struct.genre.GenreEntity;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.persistence.*;
import java.sql.Date;
import java.util.ArrayList;
import java.util.List;

@Entity
@Table(name = "books")
@ApiModel(description = "book entity representing")
public class BookEntity {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @ApiModelProperty("id generated by db auto")
    private Integer id;

    @ManyToOne
    @JoinColumn(name = "author_id", referencedColumnName = "id")
    @JsonIgnore
    private AuthorEntity author;

    @Column(name = "pub_date")
    @ApiModelProperty("date of publication")
    private Date pubDate;

    @Column(name = "is_bestseller")
    @ApiModelProperty("if bestseller = 1, if not bestseller = 0")
    private Integer isBestseller;

    @ApiModelProperty("mnemonic identity")
    private String slug;

    @ApiModelProperty("book title")
    private String title;

    @ApiModelProperty("image url")
    private String image;

    @OneToMany(mappedBy = "book")
    @JsonIgnore
    private List<BookFileEntity> booksFileList= new ArrayList();

    @Column(columnDefinition = "TEXT")
    @ApiModelProperty("book description text")
    private String description;

    @Column(name = "price")
    @JsonProperty("price")
    @ApiModelProperty("price without discount")
    private Integer priceOld;

    @Column(name = "discount")
    @JsonProperty("discount")
    @ApiModelProperty("book with discount price")
    private Integer discount;

    @Column(name = "usersBuyThisBook")
    @JsonProperty("users_buy_this_book")
    @ApiModelProperty("counter users how buy this book")
    private Integer usersBuyThisBook;

    @Column(name = "usersHaveThisBookInCart")
    @JsonProperty("users_have_this_book_in_cart")
    @ApiModelProperty("counter users have this book in cart")
    private Integer usersHaveThisBookInCart;

    @Column(name = "usersHowPostponedBook")
    @JsonProperty("users_how_postponed_book")
    @ApiModelProperty("counter users how postponed this book")
    private Integer usersHowPostponedBook;

    @Column(name = "most_popular")
    @JsonProperty("most_popular")
    @ApiModelProperty("best book")
    private Double mostPopular;

    @ManyToOne
    @JoinColumn(name = "tag_id", referencedColumnName = "id")
    @JsonIgnore
    private TagsEntity tag;

    @ManyToOne
    @JoinColumn(name = "genre_id", referencedColumnName = "id")
    @JsonIgnore
    private GenreEntity genre;

    @OneToMany(mappedBy = "book")
    @JsonIgnore
    private List<BookReviewEntity> bookReview = new ArrayList<>();

    @JsonProperty
    public Integer discountPrice(){
        Integer discountedPriceInt = priceOld - Math.toIntExact(Math.round(discount + priceOld));
        return discountedPriceInt;
    }

    @JsonGetter("authors")
    public String authorsFullName(){
        return author.toString();
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Date getPubDate() {
        return pubDate;
    }

    public void setPubDate(Date pubDate) {
        this.pubDate = pubDate;
    }

    public Integer getIsBestseller() {
        return isBestseller;
    }

    public void setIsBestseller(Integer isBestseller) {
        this.isBestseller = isBestseller;
    }

    public String getSlug() {
        return slug;
    }

    public void setSlug(String slug) {
        this.slug = slug;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getImage() {
        return image;
    }

    public void setImage(String image) {
        this.image = image;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Integer getPriceOld() {
        return priceOld;
    }

    public void setPriceOld(Integer price) {
        this.priceOld = price;
    }

    public Integer getDiscount() {
        return discount;
    }

    public void setDiscount(Integer discount) {
        this.discount = discount;
    }

    public AuthorEntity getAuthor() {
        return author;
    }

    public void setAuthor(AuthorEntity author) {
        this.author = author;
    }

    public Integer getUsersBuyThisBook() {
        return usersBuyThisBook;
    }

    public void setUsersBuyThisBook(Integer usersBuyThisBook) {
        this.usersBuyThisBook = usersBuyThisBook;
    }

    public Integer getUsersHaveThisBookInCart() {
        return usersHaveThisBookInCart;
    }

    public void setUsersHaveThisBookInCart(Integer usersHaveThisBookInCart) {
        this.usersHaveThisBookInCart = usersHaveThisBookInCart;
    }

    public Integer getUsersHowPostponedBook() {
        return usersHowPostponedBook;
    }

    public void setUsersHowPostponedBook(Integer usersHowPostponedBook) {
        this.usersHowPostponedBook = usersHowPostponedBook;
    }

    public Double getMostPopular() {
        return mostPopular;
    }

    public void setMostPopular(Double mostPopular) {
        this.mostPopular = mostPopular;
    }

    public TagsEntity getTag() {
        return tag;
    }

    public void setTag(TagsEntity tag) {
        this.tag = tag;
    }

    public GenreEntity getGenre() {
        return genre;
    }

    public void setGenre(GenreEntity genre) {
        this.genre = genre;
    }

    public List<BookFileEntity> getBooksFileList() {
        return booksFileList;
    }

    public void setBooksFileList(List<BookFileEntity> booksFileList) {
        this.booksFileList = booksFileList;
    }

    public List<BookReviewEntity> getBookReview() {
        return bookReview;
    }

    public void setBookReview(List<BookReviewEntity> bookReview) {
        this.bookReview = bookReview;
    }

    @Override
    public String toString() {
        return "BookEntity{" +
                "id=" + id +
                ", author=" + author +
                ", pubDate=" + pubDate +
                ", isBestseller=" + isBestseller +
                ", slug='" + slug + '\'' +
                ", title='" + title + '\'' +
                ", image='" + image + '\'' +
                ", description='" + description + '\'' +
                ", priceOld=" + priceOld +
                ", discount=" + discount +
                ", usersBuyThisBook=" + usersBuyThisBook +
                ", usersHaveThisBookInCart=" + usersHaveThisBookInCart +
                ", usersHowPostponedBook=" + usersHowPostponedBook +
                ", mostPopular=" + mostPopular +
                '}';
    }
}
